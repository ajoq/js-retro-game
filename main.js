!function(){"use strict";function e(e,t){const a=t-1,s=t**2-t,i=t**2-1;return 0===e?"top-left":e===a?"top-right":e>0&&e<a?"top":e===s?"bottom-left":e===i?"bottom-right":e>s&&e<i?"bottom":e%t==0?"left":e%t===a?"right":"center"}class t{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n        <div class="stats">\n            <span class="stats-name">Level: <span class="level"></span></span>\n            <span class="stats-name">Ponts: <span class="points"></span></span>\n            <span class="stats-name">Best points: <span class="best-points"></span></span>  \n        </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const a=document.createElement("div");a.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`,t),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),r.style.width=`${a.character.health}%`,i.appendChild(r),s.appendChild(i),e.appendChild(s)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const s=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}class a{static compMoveRange(e,t,a){e.forEach((e=>{t.forEach((t=>{t===e&&a.push(t)}))}))}static getRandomNumber(e){return Math.floor(Math.random()*e)}static isPlayableCharacter(e){return"bowman"===e.character.type||"magician"===e.character.type||"swordsman"===e.character.type}static levelUp(e){const t=e;return t.level+=1,a.levelUpAttackDefence(t),t.health+=80,t.health>100&&(t.health=100),Math.round(t.health),t}static levelUpAttackDefence(e){const t=e;return t.attack=Math.round(Math.max(t.attack,t.attack*(80+t.health)/100)),t.defence=Math.round(Math.max(t.defence,t.defence*(80+t.health)/100)),t}static statsUpdate(e,t,a){const s=document.querySelector(".level"),i=document.querySelector(".points"),r=document.querySelector(".best-points");s.innerText=e,i.innerText=t,r.innerText=a}}var s="auto",i="pointer",r="crosshair",c="not-allowed";function h(e,t,a){let s=null;const i=new Set,r=t;"move"===a&&(s=e.character.moveDistance),"attack"===a&&(s=e.character.attackDistance);let c=r,h=r,n=r,l=r,o=r,d=r,m=r,u=r;for(let e=0;e<s;e+=1)c>=8&&(c-=8,i.add(c)),h>=8&&h%8!=7&&(h-=7,i.add(h)),n%8!=7&&(n+=1,i.add(n)),l<=56&&l%8!=7&&(l+=9,i.add(l)),o<=56&&(o+=8,i.add(o)),d<=56&&d%8!=0&&(d+=7,i.add(d)),m%8!=0&&(m-=1,i.add(m)),u>8&&u%8!=0&&(u-=9,i.add(u));if("attack"===a){const e=Math.floor(c/8),t=Math.floor(o/8),a=m%8,s=n%8;for(let r=e;r<=t;r+=1)for(let e=a;e<=s;e+=1)i.add(8*r+e)}return Array.from(i)}class n{constructor(){this.bestPoints=0,this.gameData=null}saveBestPoints(e){e>this.bestPoints&&(this.bestPoints=e)}saveDataGame(e){return this.gameData={level:e.level,turn:e.turn,points:e.points,userTeam:e.userTeam,compTeam:e.compTeam,characters:e.characters},this.gameData}}class l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic";if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error("You cant create a Character class")}}class o{constructor(e,t){if(!(e instanceof l))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}function d(e,t,a,s){const i=[],r=function*(e,t,a){for(;;){const s=Math.floor(Math.random()*e.length),i=Math.floor(Math.random()*(a+1-t)+t);yield new e[s](i)}}(e,t,a);for(let e=0;e<s;e+=1)i.push(r.next().value);return i}class m extends l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"bowman";if(super(e,t),"bowman"!==t)throw new Error("Некорректный тип персонажа");this.type=t,this.attack=25,this.defence=25,this.attackDistance=2,this.moveDistance=2}}class u extends l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"magician";if(super(e,t),"magician"!==t)throw new Error("Некорректный тип персонажа");this.type=t,this.attack=10,this.defence=40,this.attackDistance=4,this.moveDistance=1}}class p extends l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"swordsman";if(super(e,t),"swordsman"!==t)throw new Error("Некорректный тип персонажа");this.type=t,this.attack=40,this.defence=10,this.attackDistance=1,this.moveDistance=4}}class v extends l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"daemon";if(super(e),"daemon"!==t)throw new Error("Некорректный тип персонажа");this.type=t,this.attack=10,this.defence=40,this.attackDistance=4,this.moveDistance=1}}class C extends l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"undead";if(super(e),"undead"!==t)throw new Error("Некорректный тип персонажа");this.type=t,this.attack=40,this.defence=10,this.attackDistance=1,this.moveDistance=4}}class g extends l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vampire";if(super(e),"vampire"!==t)throw new Error("Некорректный тип персонажа");this.type=t,this.attack=25,this.defence=25,this.attackDistance=2,this.moveDistance=2}}function w(e,t,a){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,a)}function f(e,t){var a=function(e,t,a){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)}(e,t);return function(e,t){return t.get?t.get.call(e):t.value}(e,a)}var P=new WeakMap,y=new WeakMap,E=new WeakMap;class L{constructor(){w(this,P,{writable:!0,value:[m,p]}),w(this,y,{writable:!0,value:[m,p,u]}),w(this,E,{writable:!0,value:[v,C,g]}),this.characters=null}playerStartTeam(){this.characters=d(f(this,P),1,1,2)}loadGameTeam(e){this.characters=[],e.forEach((e=>{const t=e.type[0].toUpperCase()+e.type.slice(1),a=this.createClass(t,e.level);a.attack=e.attack,a.defence=e.defence,a.health=e.health,this.characters.push(a)}))}createClass(e,t){switch(e){case"Bowman":return new m(t);case"Swordsman":return new p(t);case"Magician":return new u(t);case"Daemon":return new v(t);case"Undead":return new C(t);case"Vampire":return new g(t)}return!1}compStartTeam(){this.characters=d(f(this,E),1,1,2)}playerUpdateTeam(e,t){let a=1,s=0,i=0;if(2===e&&(s=1,i=1),3===e&&(s=2,i=2),4===e&&(s=2,i=3),e>4){if(a=e-4,6===t&&(s=1),t<=5&&(s=2),t>6)return!1;i=e}return d(f(this,y),a,i,s).forEach((e=>{this.updatesCharacteristics(e),this.characters.push(e)})),this.characters}compUpdateTeam(e,t){let a=1;e>4&&(a=e-4),this.characters=d(f(this,E),a,e,t),this.characters.forEach((e=>{this.updatesCharacteristics(e)}))}updatesCharacteristics(e){if(e.level>1)for(let t=1;t<e.level;t+=1)a.levelUpAttackDefence(e)}}var b={1:"prairie",2:"desert",3:"arctic",4:"mountain"};const k=new t;k.bindToDOM(document.querySelector("#game-container"));const T=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),G=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.gameState=new n,this.cleanGameProperty()}init(){this.gamePlay.drawUi(b[this.level]),this.stateService.storage.length>0&&(this.gameState.bestPoints=this.stateService.load().bestPoints),this.gamePlay.addNewGameListener(this.newGame.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this)),this.gamePlay.addLoadGameListener(this.loadGame.bind(this)),this.addCellListeners(),this.startGame()}addCellListeners(){this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this))}startGame(){a.statsUpdate(this.level,this.points,this.gameState.bestPoints),this.userTeam.playerStartTeam(),this.compTeam.compStartTeam(),this.setCharactersArr(),this.gamePlay.redrawPositions(this.characters)}newGame(){this.cleanGameProperty(),this.gamePlay.drawUi(b[this.level]),this.clearCellListeners(),this.addCellListeners(),this.startGame()}saveGame(){this.gameState.saveDataGame(this),this.stateService.save(this.gameState),t.showError("The game is saved")}loadGame(){if(0===this.stateService.storage.length)return void t.showError("No saved game");const e=this.stateService.load();this.cleanGameProperty(),this.level=e.gameData.level,this.points=e.gameData.points,this.gamePlay.drawUi(b[this.setTheme()]),this.userTeam.loadGameTeam(e.gameData.userTeam.characters),this.compTeam.loadGameTeam(e.gameData.compTeam.characters),[...this.userTeam.characters,...this.compTeam.characters].forEach(((t,a)=>{this.characters.push(new o(t,e.gameData.characters[a].position))})),this.clearCellListeners(),this.addCellListeners(),this.gamePlay.redrawPositions(this.characters),a.statsUpdate(this.level,this.points,this.gameState.bestPoints),t.showError("The game is loaded")}onCellClick(e){const i=this.checkCharacterInCell(e);if(i&&a.isPlayableCharacter(i)&&((this.activeCharacterIndex||0===this.activeCharacterIndex)&&this.gamePlay.deselectCell(this.activeCharacterIndex),this.gamePlay.selectCell(e),this.activeCharacterIndex=e,this.activeCharacter=i),i&&!a.isPlayableCharacter(i)){if(!this.canAttack)return this.activeCharacter?void t.showError("The opponent cannot be attacked"):void t.showError("This is the opponent's character!");if(!this.activeCharacter)return;const a=+Math.max(this.activeCharacter.character.attack-i.character.defence,.1*this.activeCharacter.character.attack).toFixed(1);i.character.health-=a,i.character.health=+i.character.health.toFixed(1),this.gamePlay.deselectCell(this.activeCharacterIndex),this.gamePlay.deselectCell(e),this.activeCharacterIndex=null,this.activeCharacter=null,this.canAttack=null,this.gamePlay.setCursor(s),(async()=>{await this.gamePlay.showDamage(e,a),i.character.health<=0&&this.death(this.compTeam,i),this.gamePlay.redrawPositions(this.characters),this.turn=!1,this.compTeam.characters.length>0?this.whoseTurn():setTimeout((()=>{this.gameLoop()}),100)})()}i||null==this.canMove||(this.gamePlay.deselectCell(this.activeCharacter.position),this.activeCharacter.position=e,this.canMove=null,this.activeCharacterIndex=null,this.activeCharacter=null,this.gamePlay.deselectCell(e),this.gamePlay.setCursor(s),this.gamePlay.redrawPositions(this.characters),this.turn=!1,this.whoseTurn())}onCellEnter(e){const t=this.checkCharacterInCell(e);t&&(a.isPlayableCharacter(t)&&this.gamePlay.setCursor(i),this.gamePlay.showCellTooltip(`🎖 ${t.character.level} ⚔ ${t.character.attack} 🛡 ${t.character.defence} ❤ ${t.character.health}`,e)),this.activeCharacter&&!t&&(h(this.activeCharacter,this.activeCharacterIndex,"move").forEach((t=>{t===e&&(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor(i),this.canMove=t)})),this.activeCharacter&&!this.canMove&&this.gamePlay.setCursor(c)),this.activeCharacter&&t&&!a.isPlayableCharacter(t)&&(h(this.activeCharacter,this.activeCharacterIndex,"attack").forEach((t=>{t===e&&(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(r),this.canAttack=!0)})),this.canAttack||a.isPlayableCharacter(t)||this.gamePlay.setCursor(c))}onCellLeave(e){const t=this.checkCharacterInCell(e);this.gamePlay.setCursor(s),t&&this.gamePlay.hideCellTooltip(e),this.activeCharacter&&!t&&(this.gamePlay.deselectCell(e),this.canMove=null),this.activeCharacter&&t&&!a.isPlayableCharacter(t)&&(this.gamePlay.deselectCell(e),this.canAttack=null)}turnComp(){let e=null,s=null;if(this.compTeam.characters.find((i=>{const r=this.characters.find((e=>e.character===i));if(h(r,r.position,"attack").find((e=>{const t=this.checkCharacterInCell(e);return!(!t||!a.isPlayableCharacter(t))&&(s=t,s)})),s){e=r,this.gamePlay.selectCell(e.position),this.gamePlay.selectCell(s.position,"red");const a=+Math.max(e.character.attack-s.character.defence,.1*e.character.attack).toFixed(1);return s.character.health-=a,s.character.health=+s.character.health.toFixed(1),(async()=>{await this.gamePlay.showDamage(s.position,a),this.gamePlay.deselectCell(e.position),this.gamePlay.deselectCell(s.position),s.character.health<=0&&this.death(this.userTeam,s),this.gamePlay.redrawPositions(this.characters),this.turn=!0,0===this.userTeam.characters.length&&setTimeout((()=>{t.showError("Game over!"),this.clearCellListeners()}),100)})(),e}return!1})),e)return;e=this.strongCharacter(this.compTeam.characters);const i=h(e,e.position,"move");i.forEach(((e,t,a)=>{this.checkCharacterInCell(e)&&a.splice(t,1)}));const r=new Set;this.userTeam.characters.find((t=>{const a=this.characters.find((e=>e.character===t));return h(e,a.position,"attack").forEach((e=>{r.add(e)})),!1}));const c=[];a.compMoveRange(r,i,c),0===c.length&&(r.forEach((t=>{this.userTeam.characters.forEach((()=>{h(e,t,"attack").forEach((e=>{r.add(e)}))}))})),a.compMoveRange(r,i,c)),[e.position]=c,this.gamePlay.redrawPositions(this.characters),this.turn=!0}death(e,t){e.characters.forEach(((e,a,s)=>{e===t.character&&s.splice(a,1)})),this.characters.forEach(((e,a,s)=>{e.character===t.character&&s.splice(a,1)}))}gameLoop(){this.userTeam.characters.forEach((e=>{this.points+=e.health,this.points=+this.points.toFixed(1),this.gameState.saveBestPoints(this.points),this.updateBestPoints(),a.levelUp(e)})),t.showError(`You win! Points: ${this.points}`),this.level+=1,this.gamePlay.drawUi(b[this.setTheme()]),this.userTeam.playerUpdateTeam(this.level,this.userTeam.characters.length),this.compTeam.compUpdateTeam(this.level,this.userTeam.characters.length),this.characters=[],this.allowPlayerPositions=[],this.allowCompPositions=[],this.setCharactersArr(),this.gamePlay.redrawPositions(this.characters),a.statsUpdate(this.level,this.points,this.gameState.bestPoints),this.whoseTurn()}clearCellListeners(){this.gamePlay.cellEnterListeners=[],this.gamePlay.cellLeaveListeners=[],this.gamePlay.cellClickListeners=[]}cleanGameProperty(){this.level=1,this.turn=!0,this.points=0,this.userTeam=new L,this.compTeam=new L,this.allowPlayerPositions=[],this.allowCompPositions=[],this.characters=[],this.activeCharacterIndex=null,this.activeCharacter=null,this.canAttack=null,this.canMove=null}strongCharacter(e){const t=e;return t.length>1&&t.sort(((e,t)=>e.attack>t.attack?-1:1)),this.characters.find((e=>e.character===t[0]))}checkCharacterInCell(e){return this.characters.find((t=>t.position===e))}generatePositions(e,t){e.characters.forEach((e=>{const s=a.getRandomNumber(t.length),i=t[s];t.splice(s,1),this.characters.push(new o(e,i))}))}setCharactersArr(){this.getPlayerPositions(),this.getCompPositions(),this.generatePositions(this.userTeam,this.allowPlayerPositions),this.generatePositions(this.compTeam,this.allowCompPositions)}getPlayerPositions(){for(let e=0;e<this.gamePlay.boardSize**2;)e%2==0?(this.allowPlayerPositions.push(e),e+=1):(this.allowPlayerPositions.push(e),e+=7)}getCompPositions(){for(let e=6;e<this.gamePlay.boardSize**2;)e%2==0?(this.allowCompPositions.push(e),e+=1):(this.allowCompPositions.push(e),e+=7)}setTheme(){let e=this.level%4;return 0===e&&(e=4),e}updateBestPoints(){if(0===this.stateService.storage.length)return;const e=this.stateService.load();this.gameState.bestPoints>e.bestPoints&&(e.bestPoints=this.gameState.bestPoints,this.stateService.save(e))}whoseTurn(){this.turn||this.turnComp()}}(k,T);G.init()}();